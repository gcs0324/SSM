<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/c"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--set注入-->
    <bean id="studentOne" class="com.spring.pojo.Student">
        <!--
            property标签：通过组件类的setXxx()方法给组件对象设置属性
            name属性：指定属性名（这个属性名是getXxx()、setXxx()方法定义的，和成员变量无关）
            value属性：指定属性值（为字面量类型赋值）、
                字面量类型：基本数据类型及其包装类型，还有string类型
        -->
        <property name="sid" value="1001"/>
        <property name="sname" value="张三"/>
        <property name="age" value="23"/>
        <property name="gender" value="男"/>
    </bean>

    <!--构造器注入-->
    <!--
        可以不写name属性，默认按照构造器的参数顺序
    -->
    <bean id="studentTwo" class="com.spring.pojo.Student">
        <constructor-arg value="1002"/>
        <constructor-arg value="张三"/>
        <constructor-arg value="23"/>
        <constructor-arg value="女" name="gender"/>
    </bean>

    <bean id="studentThree" class="com.spring.pojo.Student">
        <property name="sid" value="1003"/>
        <!--
            < &lt;
            > &gt;
            CDATA节其中的内容会原样解析
            CDATA节是xml中的一个特殊的标签，因此不能写在一个属性中
        -->
        <!--<property name="sname" value="&lt;张三&gt;"/>-->
        <property name="sname">
            <value><![CDATA[<王五>]]></value>
        </property>
        <property name="age" value="23"/>
        <property name="gender">
            <null/>
        </property>
    </bean>

    <bean id="clazzOne" class="com.spring.pojo.Clazz">
        <property name="clazzId" value="1111"/>
        <property name="clazzName" value="财源滚滚班"/>
    </bean>

    <bean id="studentFour" class="com.spring.pojo.Student">
        <property name="sid" value="1004"/>
        <property name="sname" value="赵六"/>
        <property name="age" value="26"/>
        <property name="gender" value="女"/>
        <!-- ref属性：引用IOC容器中某个bean的id，将所对应的bean为属性赋值 -->
        <property name="clazz" ref="clazzOne"/>
    </bean>
    <!--
        数组赋值方式：
        private String[] hooby;
        <property name="hobby">
            <array>
                <value>抽烟</value>
                <value>喝酒</value>
                <value>烫头</value>
            </array>
        </property>

        List集合赋值方式：
        一、
        private List<Student> students;
        <property name="students">
            <list>
                <ref bean="studentOne"></ref>
                <ref bean="studentTwo"></ref>
                <ref bean="studentThree"></ref>
            </list>
        </property>
        二、
        <property name="students" ref="studentList"/>

        <util:List id="studentList">
            <ref bean="studentOne"/>
            <ref bean="studentTwo"/>
            <ref bean="studentThree"/>
        </util:List>

        Map集合赋值方式
        private Map<String,Teacher> teacherMap;
        <property name="teacherMap">
            <map>
                <entry key="10086" value-ref="teacherOne"/>
                <entry key="10010" value-ref="teacherTwo"/>
            </map>
        </property>

        <util:map id="teacherMap">
            <entry key="10086" value-ref="teacherOne"/>
        </util:map>
    -->
    <bean id="studentFive" class="com.spring.pojo.Student">
        <property name="sid" value="1004"></property>
        <property name="sname" value="赵六"></property>
        <property name="age" value="26"></property>
        <property name="gender" value="女"></property>
        <property name="clazz">
            <!-- 在一个bean中再声明一个bean就是内部bean -->
            <!-- 内部bean只能用于给属性赋值，不能在外部通过IOC容器获取，因此可以省略id属性 -->
            <bean id="clazzInner" class="com.spring.pojo.Clazz">
                <property name="clazzId" value="2222"></property>
                <property name="clazzName" value="远大前程班"></property>
            </bean>
        </property>
        <property name="hobby">
            <array>
                <value>抽烟</value>
                <value>喝酒</value>
                <value>烫头</value>
            </array>
        </property>
        <property name="teacherMap">
            <map>
                <entry key="10086" value-ref="teacherOne"/>
                <entry key="10010" value-ref="teacherTwo"/>
            </map>
        </property>
    </bean>

    <bean id="teacherOne" class="com.spring.pojo.Teacher">
        <property name="tid" value="10086"/>
        <property name="tname" value="大宝"/>
    </bean>

    <bean id="teacherTwo" class="com.spring.pojo.Teacher">
        <property name="tid" value="10010"/>
        <property name="tname" value="小宝"/>
    </bean>
    <!--配置一个集合类型的bean，需要引入util-->
    <util:List id="studentList">
        <ref bean="studentOne"/>
        <ref bean="studentTwo"/>
        <ref bean="studentThree"/>
    </util:List>

    <util:map id="teacherMap">
        <entry key="10086" value-ref="teacherOne"/>
    </util:map>
</beans>